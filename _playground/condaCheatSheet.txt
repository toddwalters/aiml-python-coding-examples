conda create --name <name>

conda install pip boto3 pandas ipykernel

# parse env name information from your new environment
export CURRENT_ENV_NAME=$(conda info | grep "active environment" | cut -d : -f 2 | tr -d ' ')

# register your new environment as Jupyter Kernel for execution 
python -m ipykernel install --user --name $CURRENT_ENV_NAME --display-name "user-env:($CURRENT_ENV_NAME)"

# install packages in your new conda environment
conda install -c conda-forge python-dotenv matplotlib pyyaml 
conda install -c conda-forge scikit-learn opencv 
conda install -c conda-forge tensorflow 
conda install -c conda-forge tensorflow-gpu 
conda install -c conda-forge keras-tuner

# If conda install doesn't work
pip install tensorflow tensorflow-gpu


(capstone-new) PS C:\Users\walto\wrkspace\repos\toddwalters\aiml-python-coding-examples> python
Python 3.9.15 | packaged by conda-forge | (main, Nov 22 2022, 08:39:05) [MSC v.1929 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> import matplotlib
>>> print(matplotlib.__file__)
C:\Users\walto\anaconda3\envs\capstone-new\lib\site-packages\matplotlib\__init__.py
>>> print(matplotlib.__version__) 
3.9.2
>>> from matplotlib import get_data_path
>>> print(get_data_path())
C:\Users\walto\anaconda3\envs\capstone-new\lib\site-packages\matplotlib\mpl-data
